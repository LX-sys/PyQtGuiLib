# -*- coding: utf-8 -*-

# self implementation generated from reading ui file 'qssFile.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
from PyQt5.QtWidgets import QApplication, QWidget
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQtGuiLib.styles.qssFile.image import image_rc


class QSSFile(QWidget):
    def __init__(self, *args,**kwargs) -> None:
        super().__init__(*args,**kwargs)
        self.setupUi()
    
    def setupUi(self):
        self.setObjectName("self")
        self.setEnabled(True)
        self.resize(1232, 797)
        self.setStyleSheet("*{\n"
"    background-color: rgb(50, 50, 50);\n"
"    color:rgb(220, 220, 220);\n"
"    font: 12pt \"黑体\";\n"
"}\n"
"/*---------------------*/\n"
"QScrollBar:horizontal{\n"
"    padding:0px;\n"
"    max-height:12px;\n"
"    padding:2px;\n"
"}\n"
"QScrollBar:vertical{\n"
"    padding:0px;\n"
"    max-width:12px;\n"
"    padding:2px;\n"
"}\n"
"QScrollBar::handle{\n"
"background-color: rgb(39, 39, 39);\n"
"border-radius:4%;\n"
"\n"
"}\n"
"QScrollBar::handle:hover{\n"
"background-color: rgb(72, 72, 72);\n"
"border:1px solid rgb(149, 149, 149);\n"
"}\n"
"QScrollBar::add-page,QScrollBar::sub-page {\n"
"    background:rgb(57, 57, 57);\n"
"}\n"
"QScrollBar::sub-line,QScrollBar::add-line {\n"
"    background:none;\n"
"}")
        self.pushButton = QtWidgets.QPushButton(self)
        self.pushButton.setGeometry(QtCore.QRect(30, 50, 141, 51))
        self.pushButton.setStyleSheet("QPushButton{\n"
"background-color: rgb(8, 8, 8);\n"
"border:2px solid rgb(230, 230, 230);\n"
"color:rgb(220, 220, 220);\n"
"border-radius:6%;\n"
"}\n"
"QPushButton:hover{\n"
"background-color: rgb(0, 0, 0);\n"
"}\n"
"QPushButton:pressed{\n"
"background-color:rgb(50, 50, 50);\n"
"}")
        self.pushButton.setObjectName("pushButton")
        self.radioButton = QtWidgets.QRadioButton(self)
        self.radioButton.setGeometry(QtCore.QRect(40, 200, 131, 51))
        self.radioButton.setStyleSheet("QRadioButton{\n"
"\n"
"}\n"
"QRadioButton:hover{\n"
"}\n"
"QRadioButton:pressed{\n"
"\n"
"}\n"
"QRadioButton::indicator {\n"
"    padding:3px 0px 0px 0px;\n"
"    width: 20px;\n"
"    height: 20px;\n"
"}\n"
"QRadioButton::indicator::unchecked{\n"
"    image: url(:/QRadioButton/QRadioButton/QRadioButton.png);\n"
"}\n"
"QRadioButton::indicator::checked{\n"
"    image: url(:/QRadioButton/QRadioButton/QRadioButton_pressed.png);\n"
"}")
        self.radioButton.setObjectName("radioButton")
        self.checkBox = QtWidgets.QCheckBox(self)
        self.checkBox.setGeometry(QtCore.QRect(40, 280, 111, 21))
        self.checkBox.setStyleSheet("QCheckBox::indicator {\n"
"    padding:3px 0px 0px 0px;\n"
"    width: 20px;\n"
"    height: 20px;\n"
"}\n"
"QCheckBox::indicator::unchecked{ \n"
"    image: url(:/QCheckBox/QCheckBox/QCheckBox.png);\n"
"}\n"
"QCheckBox::indicator::checked{\n"
"    image: url(:/QCheckBox/QCheckBox/QCheckBox_pressed.png);\n"
"}")
        self.checkBox.setObjectName("checkBox")
        self.commandLinkButton = QtWidgets.QCommandLinkButton(self)
        self.commandLinkButton.setGeometry(QtCore.QRect(30, 350, 185, 41))
        self.commandLinkButton.setStyleSheet("QCommandLinkButton{\n"
"background-color: rgb(8, 8, 8);\n"
"border:1px solid rgb(0, 120, 215);\n"
"color:rgb(220, 220, 220);\n"
"border-radius:6%;\n"
"}\n"
"QCommandLinkButton:hover{\n"
"background-color: rgb(0, 0, 0);\n"
"}\n"
"QCommandLinkButton:pressed{\n"
"background-color:rgb(50, 50, 50);\n"
"}")
        self.commandLinkButton.setObjectName("commandLinkButton")
        self.tableWidget = QtWidgets.QTableWidget(self)
        self.tableWidget.setGeometry(QtCore.QRect(270, 200, 261, 291))
        self.tableWidget.setStyleSheet("QTableView{\n"
"outline: 0px;\n"
"background-color:rgb(33, 33, 33);\n"
"gridline-color:rgb(125, 125, 125);\n"
"}\n"
"QTableView QHeaderView,QTableView QHeaderView::section, QTableView QTableCornerButton::section {\n"
"background-color:rgb(0, 0, 0);\n"
"color:rgb(175, 175, 175);\n"
"}\n"
"QTableView QHeaderView::section::pressed{\n"
"color:rgb(207, 207, 103);\n"
"}\n"
"QTableView QTableCornerButton::section{\n"
"background-color: rgb(0, 0, 0);\n"
"}\n"
"QHeaderView::section, QTableCornerButton:section {\n"
"    padding: 3px;\n"
"    margin: 0px;\n"
"    border: 1px solid gray;\n"
"    border-left-width: 0px;\n"
"    border-right-width: 1px;\n"
"    border-top-width: 0px;\n"
"    border-bottom-width: 1px;\n"
"}\n"
"QTableView::indicator{\n"
"background-color: rgb(255, 170, 0);\n"
"}\n"
"QTableView::indicator:checked{\n"
"background-color:rgb(33, 33, 33);\n"
"}\n"
"QTableView::item{\n"
"padding:0px;\n"
"border:0px;\n"
"}\n"
"QTableView::item:selected{\n"
"    background-color:#000;\n"
"}\n"
"QTableView::item:hover{\n"
"background-color: rgb(86, 86, 86);\n"
"}\n"
"\n"
"")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(3)
        self.tableWidget.setRowCount(3)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        self.listWidget_2 = QtWidgets.QListWidget(self)
        self.listWidget_2.setGeometry(QtCore.QRect(280, 40, 261, 131))
        self.listWidget_2.setStyleSheet("QListView {\n"
"outline: 0px;\n"
"background-color: rgb(2, 2, 2);\n"
"color: #FFFFFF;\n"
"border: 1px solid #666666;\n"
"}\n"
"QListView::item:hover{\n"
"padding:0px 0px 0px 15px;\n"
"color:rgb(255, 255, 255);\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0.5625, x2:0.994318, y2:0.614, stop:0 rgba(0, 0, 0, 255), stop:0.909091 rgba(73, 73, 73, 255));\n"
"}\n"
"QListView::item {\n"
"background-color: rgb(2, 2, 2);\n"
"color: rgb(143, 143, 143);\n"
"padding: 5px;\n"
"border-bottom: 1px solid #666666;\n"
"}\n"
"QListView::item:selected {\n"
"padding:0px 0px 0px 15px;\n"
"color:rgb(255, 255, 255);\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0.5625, x2:0.994318, y2:0.614, stop:0 rgba(0, 0, 0, 255), stop:0.909091 rgba(73, 73, 73, 255));\n"
"}")
        self.listWidget_2.setObjectName("listWidget_2")
        item = QtWidgets.QListWidgetItem()
        self.listWidget_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget_2.addItem(item)
        self.toolButton_2 = QtWidgets.QToolButton(self)
        self.toolButton_2.setGeometry(QtCore.QRect(30, 130, 191, 51))
        self.toolButton_2.setStyleSheet("QToolButton {\n"
"    border-radius:6%;\n"
"    background-color: #1E1E1E; \n"
"    color: #FFFFFF; \n"
"    border: 1px solid #2F2F2F; \n"
"    padding: 5px;\n"
"}\n"
"\n"
"QToolButton:hover {\n"
"    background-color: rgb(18, 18, 18);\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    background-color:#1E1E1E; \n"
"}\n"
"")
        self.toolButton_2.setObjectName("toolButton_2")
        self.treeWidget = QtWidgets.QTreeWidget(self)
        self.treeWidget.setGeometry(QtCore.QRect(570, 40, 261, 181))
        self.treeWidget.setStyleSheet("QTreeView{\n"
"    background-color: rgb(33, 33, 33);\n"
"    color:rgb(188, 188, 188);\n"
"}\n"
"QTreeView QHeaderView,QTreeView QHeaderView::section{\n"
"background-color: rgb(0, 0, 0);\n"
"color:rgb(175, 175, 175);\n"
"}\n"
"QTreeView::item:hover{\n"
"background-color:transparent;\n"
"}\n"
"QTreeView::item:selected{\n"
"background-color:rgb(121, 121, 121);\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"QTreeView::branch:selected{\n"
"    background-color:rgb(121, 121, 121);\n"
"}")
        self.treeWidget.setRootIsDecorated(True)
        self.treeWidget.setUniformRowHeights(False)
        self.treeWidget.setItemsExpandable(True)
        self.treeWidget.setAnimated(False)
        self.treeWidget.setObjectName("treeWidget")
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        self.treeWidget.header().setCascadingSectionResizes(False)
        self.treeWidget.header().setDefaultSectionSize(200)
        self.treeWidget.header().setHighlightSections(False)
        self.groupBox = QtWidgets.QGroupBox(self)
        self.groupBox.setGeometry(QtCore.QRect(580, 260, 231, 141))
        self.groupBox.setStyleSheet("QGroupBox {\n"
"border:1px solid rgb(118, 118, 118);\n"
"border-radius:5px;\n"
"background-color: rgb(26, 26, 26);\n"
"}\n"
"")
        self.groupBox.setObjectName("groupBox")
        self.toolBox = QtWidgets.QToolBox(self)
        self.toolBox.setGeometry(QtCore.QRect(900, 60, 241, 131))
        self.toolBox.setStyleSheet("QToolBox::tab {\n"
"    background-color: rgb(90, 90, 90);\n"
"    border-radius:3%;\n"
"    padding:5px;\n"
"}\n"
"\n"
"QToolBox::tab:selected{\n"
"    font: italic;\n"
"    color: white;\n"
"}")
        self.toolBox.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.toolBox.setObjectName("toolBox")
        self.page = QtWidgets.QWidget()
        self.page.setGeometry(QtCore.QRect(0, 0, 241, 71))
        self.page.setObjectName("page")
        self.toolBox.addItem(self.page, "")
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setGeometry(QtCore.QRect(0, 0, 241, 71))
        self.page_2.setObjectName("page_2")
        self.toolBox.addItem(self.page_2, "")
        self.tabWidget = QtWidgets.QTabWidget(self)
        self.tabWidget.setGeometry(QtCore.QRect(840, 250, 331, 181))
        self.tabWidget.setStyleSheet("QTabWidget::pane {\n"
"}\n"
"QTabWidget QWidget{\n"
"background-color: rgb(20, 20, 20);\n"
"}\n"
"QTabWidget QTabBar::tab{\n"
"background-color: rgb(20, 20, 20);\n"
"min-width: 20ex;\n"
"padding: 5px;\n"
"}\n"
"QTabBar::tab:selected{\n"
"color: rgb(180, 239, 255);\n"
"}\n"
"\n"
"QTabBar::tab:!selected{\n"
"background-color: rgb(65, 65, 65);\n"
"}")
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tabWidget.addTab(self.tab_2, "")
        self.comboBox = QtWidgets.QComboBox(self)
        self.comboBox.setEnabled(True)
        self.comboBox.setGeometry(QtCore.QRect(30, 550, 211, 51))
        self.comboBox.setStyleSheet("QComboBox {\n"
"background-color: rgb(0, 0, 0);\n"
"border:1px solid rgb(255, 255, 255);\n"
"border-bottom:none;\n"
"border-left:none;\n"
"border-right:none;\n"
"    color: rgb(182, 182, 182);\n"
"    border-radius: 1px;\n"
"    padding: 1px 18px 1px 3px;\n"
"    min-width: 6em;\n"
"}\n"
"QComboBox:editable{\n"
"\n"
"}\n"
"QComboBox::drop-down{\n"
"      width: 30px;\n"
"    padding-right:8px;\n"
"    image: url(:/QComboBox/QComboBox/down-arrow.png);\n"
"}\n"
"QComboBox::down-arrow{\n"
"\n"
"    \n"
"}\n"
"QComboBox QAbstractItemView{\n"
"background-color: rgb(0, 0, 0);\n"
"border:none;\n"
"outline: 0px;\n"
"selection-background-color:rgb(0, 0, 0);\n"
"selection-color:rgb(0, 255, 255);\n"
"}")
        self.comboBox.setEditable(True)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.fontComboBox = QtWidgets.QFontComboBox(self)
        self.fontComboBox.setGeometry(QtCore.QRect(30, 640, 211, 41))
        self.fontComboBox.setStyleSheet("QFontComboBox {\n"
"    border:2px solid rgb(103, 103, 103);\n"
"    border-radius: 5px;\n"
"    padding: 1px 18px 1px 3px;\n"
"    min-width: 6em;\n"
"}\n"
"QFontComboBox QAbstractItemView{\n"
"outline: 0px;\n"
"selection-background-color: rgb(90, 90, 90);\n"
"}")
        self.fontComboBox.setObjectName("fontComboBox")
        self.lineEdit = QtWidgets.QLineEdit(self)
        self.lineEdit.setGeometry(QtCore.QRect(290, 520, 241, 51))
        self.lineEdit.setStyleSheet("QLineEdit{\n"
"border:2px solid rgb(0, 0, 0);\n"
"border-top:none;\n"
"border-left:none;\n"
"border-right:none;\n"
"}\n"
"QLineEdit:hover{\n"
"border:2px solid qlineargradient(spread:pad, x1:0.012, y1:0.556818, x2:1, y2:0.573864, stop:0 rgba(110, 203, 205, 255), stop:0.965909 rgba(67, 91, 95, 255));\n"
"border-top:none;\n"
"border-left:none;\n"
"border-right:none;\n"
"}")
        self.lineEdit.setObjectName("lineEdit")
        self.textEdit = QtWidgets.QTextEdit(self)
        self.textEdit.setGeometry(QtCore.QRect(290, 590, 231, 81))
        self.textEdit.setStyleSheet("QTextEdit{\n"
"border:1px solid rgb(0, 0, 0);\n"
"border-radius: 3px;\n"
"}\n"
"QTextEdit:hover{\n"
"    border:1px solid rgb(0, 85, 255);\n"
"}")
        self.textEdit.setObjectName("textEdit")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self)
        self.plainTextEdit.setGeometry(QtCore.QRect(290, 710, 241, 71))
        self.plainTextEdit.setStyleSheet("QPlainTextEdit{\n"
"border:1px solid rgb(0, 0, 0);\n"
"border-radius: 4%;\n"
"    background-color: rgb(66, 66, 66);\n"
"}\n"
"QPlainTextEdit:hover{\n"
"border:1px solid rgb(109, 109, 109);\n"
"}")
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.spinBox = QtWidgets.QSpinBox(self)
        self.spinBox.setGeometry(QtCore.QRect(570, 480, 151, 41))
        self.spinBox.setObjectName("spinBox")
        self.doubleSpinBox = QtWidgets.QDoubleSpinBox(self)
        self.doubleSpinBox.setGeometry(QtCore.QRect(570, 560, 141, 41))
        self.doubleSpinBox.setObjectName("doubleSpinBox")
        self.progressBar = QtWidgets.QProgressBar(self)
        self.progressBar.setGeometry(QtCore.QRect(780, 490, 331, 31))
        self.progressBar.setStyleSheet("QProgressBar {\n"
"    border: 2px solid rgb(0, 0, 0);\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QProgressBar::chunk {\n"
"    border: 2px solid rgb(72, 72, 72);\n"
"    width: 20px;\n"
"}")
        self.progressBar.setProperty("value", 100)
        self.progressBar.setAlignment(QtCore.Qt.AlignCenter)
        self.progressBar.setObjectName("progressBar")
        self.lcdNumber = QtWidgets.QLCDNumber(self)
        self.lcdNumber.setGeometry(QtCore.QRect(760, 560, 64, 23))
        self.lcdNumber.setDigitCount(5)
        self.lcdNumber.setProperty("intValue", 41)
        self.lcdNumber.setObjectName("lcdNumber")

        self.retranslateUi()
        self.toolBox.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("self", "self"))
        self.pushButton.setText(_translate("self", "PushButton"))
        self.radioButton.setText(_translate("self", "RadioButton"))
        self.checkBox.setText(_translate("self", "CheckBox"))
        self.commandLinkButton.setText(_translate("self", "CommandLinkButton"))
        item = self.tableWidget.verticalHeaderItem(0)
        item.setText(_translate("self", "新建行"))
        item = self.tableWidget.verticalHeaderItem(1)
        item.setText(_translate("self", "新建行"))
        item = self.tableWidget.verticalHeaderItem(2)
        item.setText(_translate("self", "新建行"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("self", "新建列"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("self", "新建列"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("self", "新建列"))
        __sortingEnabled = self.listWidget_2.isSortingEnabled()
        self.listWidget_2.setSortingEnabled(False)
        item = self.listWidget_2.item(0)
        item.setText(_translate("self", "新建项目"))
        item = self.listWidget_2.item(1)
        item.setText(_translate("self", "新建项目"))
        item = self.listWidget_2.item(2)
        item.setText(_translate("self", "新建项目"))
        item = self.listWidget_2.item(3)
        item.setText(_translate("self", "新建项目"))
        item = self.listWidget_2.item(4)
        item.setText(_translate("self", "新建项目"))
        self.listWidget_2.setSortingEnabled(__sortingEnabled)
        self.toolButton_2.setText(_translate("self", "..."))
        self.treeWidget.setSortingEnabled(False)
        self.treeWidget.headerItem().setText(0, _translate("self", "属性"))
        self.treeWidget.headerItem().setText(1, _translate("self", "值"))
        __sortingEnabled = self.treeWidget.isSortingEnabled()
        self.treeWidget.setSortingEnabled(False)
        self.treeWidget.topLevelItem(0).setText(0, _translate("self", "新建项目"))
        self.treeWidget.topLevelItem(0).child(0).setText(0, _translate("self", "新建子项目"))
        self.treeWidget.topLevelItem(0).child(1).setText(0, _translate("self", "新建子项目"))
        self.treeWidget.topLevelItem(1).setText(0, _translate("self", "新建项目"))
        self.treeWidget.topLevelItem(1).child(0).setText(0, _translate("self", "新建子项目"))
        self.treeWidget.topLevelItem(1).child(1).setText(0, _translate("self", "新建子项目"))
        self.treeWidget.setSortingEnabled(__sortingEnabled)
        self.groupBox.setTitle(_translate("self", "分组"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page), _translate("self", "第一页"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), _translate("self", "第二页"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("self", "Tab 1"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("self", "Tab 2"))
        self.comboBox.setItemText(0, _translate("self", "新建项目"))
        self.comboBox.setItemText(1, _translate("self", "新建项目"))
        self.comboBox.setItemText(2, _translate("self", "新建项目"))
        self.lineEdit.setText(_translate("self", "dsad"))
        self.textEdit.setHtml(_translate("self", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'黑体\'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">dsad</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">das</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">d</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">as</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">d</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">as</p></body></html>"))


if __name__ == '__main__':
    app = QApplication(sys.argv)

    win = QSSFile()
    win.show()

    sys.exit(app.exec_())
    